---
# - name: "Docker"
#   hosts: all
#   become: true

#   tasks:
#   - name: "Install PIP"
#     apt:
#       name: 
#       - "python3-pip"
#       - "python3-setuptools"
#       state: present
#       update_cache: yes

#   - name: "Install Docker Dependency"
#     apt:
#       name: "{{ item }}"
#       state: latest
#     loop:
#     - ca-certificates
#     - curl
#     - gnupg
#     - lsb-release
    
#   - name: "Add Docker GPG Key"
#     apt_key:
#       url: https://download.docker.com/linux/ubuntu/gpg
#       state: present

#   - name: "Add Docker Repository"
#     apt_repository:
#       repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
#       state: present

#   - name: Install Docker-ce
#     apt:
#       name: "{{ item }}"
#       state: latest
#       update_cache: true
#     loop:
#     - docker-ce 
#     - docker-ce-cli
#     - containerd.io
#     - docker-compose-plugin
 

#   - name: Add user to docker group
#     user:
#       name: "ubuntu"
#       groups: docker
#       append: true

#   - name: Install docker Python Package
#     pip:
#       name: docker
#       state: present


- name: Install Prometheus node_exporter
  hosts: all
  become: true
  vars_files:
  - variable.yaml

  tasks:  
  - name: download node_exporter package
 

    get_url:
      url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
      dest: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
  
  - name: unpack node_exporter
    unarchive:
      src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
      dest: "/tmp/"
      remote_src: yes

  - name: copy node_exporter
    copy:
      src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
      dest: "{{ node_exporter_dir }}/node_exporter"
      remote_src: yes
      owner: root
      group: root
      mode: 0755

  - name: setting systemd file
    template:
        src: templates/node_exporter.service.j2
        dest: /etc/systemd/system/node_exporter.service
        owner: root
        group: root
        mode: 0600

  - name: start node_exporter service
    systemd:
      daemon_reload: yes
      enabled: yes
      state: started
      name: node_exporter.service
  